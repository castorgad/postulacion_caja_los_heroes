-- RESPUESTAS EJERCICIO:

-- 1.

-- MySQL Script generated by MySQL Workbench
-- Thu Nov 11 19:30:57 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Propietarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Propietarios` (
  `idPropietarios` INT NOT NULL,
  `rutPropietario` VARCHAR(45) NULL,
  `nombre` VARCHAR(45) NULL,
  `fechaNacimiento` DATETIME NULL,
  PRIMARY KEY (`idPropietarios`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Propiedad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Propiedad` (
  `idPropiedad` INT NOT NULL,
  `idPropietarios` INT NOT NULL,
  `calle` VARCHAR(45) NULL,
  `numero` VARCHAR(45) NULL,
  `comuna` VARCHAR(45) NULL,
  `region` VARCHAR(45) NULL,
  `pais` VARCHAR(45) NULL,
  PRIMARY KEY (`idPropiedad`),
  INDEX `fk_Propiedad_Propietarios_idx` (`idPropietarios` ASC) VISIBLE,
  CONSTRAINT `fk_Propiedad_Propietarios`
    FOREIGN KEY (`idPropietarios`)
    REFERENCES `mydb`.`Propietarios` (`idPropietarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Arrendatario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Arrendatario` (
  `idArrendatario` INT NOT NULL,
  `rutArrendatario` VARCHAR(45) NULL,
  `nombre` VARCHAR(45) NULL,
  `fechaNacimiento` DATETIME NULL,
  PRIMARY KEY (`idArrendatario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Arriendos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Arriendos` (
  `idArriendos` INT NOT NULL,
  `idArrendatario` INT NOT NULL,
  `idPropietarios` INT NOT NULL,
  `idPropiedad` INT NOT NULL,
  `monto` INT NULL,
  `fechaIni` DATETIME NULL,
  `fechaFin` DATETIME NULL,
  PRIMARY KEY (`idArriendos`),
  INDEX `fk_Arriendos_Propiedad1_idx` (`idPropiedad` ASC) VISIBLE,
  INDEX `fk_Arriendos_Arrendatario1_idx` (`idArrendatario` ASC) VISIBLE,
  INDEX `fk_Arriendos_Propietarios1_idx` (`idPropietarios` ASC) VISIBLE,
  CONSTRAINT `fk_Arriendos_Propiedad1`
    FOREIGN KEY (`idPropiedad`)
    REFERENCES `mydb`.`Propiedad` (`idPropiedad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Arriendos_Arrendatario1`
    FOREIGN KEY (`idArrendatario`)
    REFERENCES `mydb`.`Arrendatario` (`idArrendatario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Arriendos_Propietarios1`
    FOREIGN KEY (`idPropietarios`)
    REFERENCES `mydb`.`Propietarios` (`idPropietarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;




-- a. Indicar cuales arrendatarios sus arriendos vencen el próximo mes.

SELECT
	arre.idArrendatario
    , arre.rutArrendatario
    , arre.nombre
    , arri.idArriendos
    , arri.fechaFin
FROM Arrendatario arre
INNER JOIN Arriendos arri
ON arre.idArrendatario = arri.idArrendatario
WHERE arri.fechaFin >= '2021-12-01' AND arri.fechaFin <= '2021-12-31' ;


-- b. Indicar cuáles propietarios tienen al menos una propiedad sin arrendar.

SELECT 
	due.idPropietarios
    , due.rutPropietario
    , due.nombre
    , prop.idPropiedad
FROM Propietarios due
INNER JOIN Propiedad prop 
ON due.idPropietarios = prop.idPropietario
INNER JOIN Arriendos arri
ON due.idPropietarios = arri.idPropietarios
WHERE prop.idPropiedad <> arri.idPropiedad
GROUP BY due.idPropietarios ;


-- c. Indicar cuántas propiedades tiene cada propietario por cada país.

SELECT 
	idPropietarios
    , rutPropietario
    , nombre
    , pais
    , COUNT(idPropiedad) AS propiedades
FROM Propietarios due
INNER JOIN Propiedad prop 
ON due.idPropietarios = prop.idPropietario
GROUP BY due.idPropietarios
	, pais
ORDER BY due.idPropietarios ;


-- d. Indicar cuáles propietarios son también arrendatarios.

SELECT 
	idPropietarios
    , rutPropietario
    , due.nombre
    , idArrendatario
FROM Propietarios due
INNER JOIN arrendatario arre
ON due.rutPropietario = arre.rutArrendatario ;


-- e. Indicar cuales arrendatarios arriendan fuera de Chile.

SELECT
	arre.idArrendatario
    , rutArrendatario
    , arre.nombre
    , idArriendos
    , pais
FROM Arrendatario arre
INNER JOIN Arriendos arri
ON arre.idArrendatario = arri.idArrendatario
INNER JOIN Propiedad prop
ON arri.idPropiedad = prop.idPropiedad
WHERE pais <> 'ch' ;


-- f. Indicar cuales son los 3 países que el monto promedio de arriendo son los más altos.

SELECT
	pais
    , TRUNCATE(AVG(monto), 2) AS monto_promedio
FROM Propiedad prop
INNER JOIN Arriendos arri
ON prop.idPropiedad = arri.idPropiedad
GROUP BY pais
ORDER BY monto_promedio DESC
LIMIT 3 ;


-- g. Indicar el monto promedio, mínimo y máximo que pagan arrendatarios que también son propietarios.

SELECT
	arre.idArrendatario
    , due.idPropietarios
    , rutArrendatario
    , arre.nombre
    , TRUNCATE(AVG(monto), 2) AS monto_promedio
    , MIN(monto) AS monto_min
    , MAX(monto) AS monto_max
FROM Arrendatario arre
INNER JOIN Arriendos arri
ON arre.idArrendatario = arri.idArrendatario
INNER JOIN Propietarios due
ON arre.rutArrendatario = due.rutPropietario
GROUP BY arre.idArrendatario ;



-- 2.

-- CREACION QUERYS:

-- MySQL Script generated by MySQL Workbench
-- Sun Nov 14 21:17:28 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`tipo_licencia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tipo_licencia` (
  `id_tipo_licencia` INT NOT NULL,
  `tipo_licencia` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tipo_licencia`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`forma_licencia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`forma_licencia` (
  `id_forma_licencia` INT NOT NULL,
  `forma_licencia` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_forma_licencia`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`empresa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`empresa` (
  `id_empresa` INT NOT NULL,
  `rut` VARCHAR(8) NOT NULL,
  `dv` VARCHAR(1) NOT NULL,
  `razon_social` VARCHAR(100) NOT NULL,
  `giro` VARCHAR(80) NULL,
  PRIMARY KEY (`id_empresa`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tipo_contrato`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tipo_contrato` (
  `id_tipo_contrato` INT NOT NULL,
  `tipo_contrato` VARCHAR(45) NULL,
  PRIMARY KEY (`id_tipo_contrato`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`estado_afiliacion_salud`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estado_afiliacion_salud` (
  `id_estado_afiliacion_salud` INT NOT NULL,
  `estado_afiliacion_salud` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_estado_afiliacion_salud`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`region`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`region` (
  `id_region` INT NOT NULL,
  `region` VARCHAR(45) NULL,
  PRIMARY KEY (`id_region`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`comuna`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`comuna` (
  `id_comuna` INT NOT NULL,
  `comuna` VARCHAR(45) NOT NULL,
  `region_id_region` INT NOT NULL,
  PRIMARY KEY (`id_comuna`),
  INDEX `fk_comuna_region1_idx` (`region_id_region` ASC) VISIBLE,
  CONSTRAINT `fk_comuna_region1`
    FOREIGN KEY (`region_id_region`)
    REFERENCES `mydb`.`region` (`id_region`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`empresa_sucursal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`empresa_sucursal` (
  `id_empresa_sucursal` INT NOT NULL,
  `empresa_sucursal` VARCHAR(45) NULL,
  `empresa_id_empresa` INT NOT NULL,
  `calle` VARCHAR(45) NULL,
  `nro` INT NULL,
  `comuna_id_comuna` INT NOT NULL,
  PRIMARY KEY (`id_empresa_sucursal`),
  INDEX `fk_empresa_sucursal_empresa1_idx` (`empresa_id_empresa` ASC) VISIBLE,
  INDEX `fk_empresa_sucursal_comuna1_idx` (`comuna_id_comuna` ASC) VISIBLE,
  CONSTRAINT `fk_empresa_sucursal_empresa1`
    FOREIGN KEY (`empresa_id_empresa`)
    REFERENCES `mydb`.`empresa` (`id_empresa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_sucursal_comuna1`
    FOREIGN KEY (`comuna_id_comuna`)
    REFERENCES `mydb`.`comuna` (`id_comuna`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`sexo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`sexo` (
  `id_sexo` INT NOT NULL,
  `sexo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_sexo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`trabajador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`trabajador` (
  `id_trabajador` INT NOT NULL,
  `rut` VARCHAR(8) NOT NULL,
  `dv` VARCHAR(1) NOT NULL,
  `nombres` VARCHAR(45) NOT NULL,
  `apellido_paterno` VARCHAR(45) NOT NULL,
  `apellido_materno` VARCHAR(45) NOT NULL,
  `sexo_id_sexo` INT NOT NULL,
  `fecha_nacimiento` DATE NOT NULL,
  `tipo_contrato_id_tipo_contrato` INT NOT NULL,
  `estado_afiliacion_salud_id_estado_afiliacion_salud` INT NOT NULL,
  `empresa_sucursal_id_empresa_sucursal` INT NOT NULL,
  PRIMARY KEY (`id_trabajador`),
  INDEX `fk_trabajador_tipo_contrato1_idx` (`tipo_contrato_id_tipo_contrato` ASC) VISIBLE,
  INDEX `fk_trabajador_estado_trabajador1_idx` (`estado_afiliacion_salud_id_estado_afiliacion_salud` ASC) VISIBLE,
  INDEX `fk_trabajador_empresa_sucursal1_idx` (`empresa_sucursal_id_empresa_sucursal` ASC) VISIBLE,
  INDEX `fk_trabajador_sexo1_idx` (`sexo_id_sexo` ASC) VISIBLE,
  CONSTRAINT `fk_trabajador_tipo_contrato1`
    FOREIGN KEY (`tipo_contrato_id_tipo_contrato`)
    REFERENCES `mydb`.`tipo_contrato` (`id_tipo_contrato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_trabajador_estado_trabajador1`
    FOREIGN KEY (`estado_afiliacion_salud_id_estado_afiliacion_salud`)
    REFERENCES `mydb`.`estado_afiliacion_salud` (`id_estado_afiliacion_salud`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_trabajador_empresa_sucursal1`
    FOREIGN KEY (`empresa_sucursal_id_empresa_sucursal`)
    REFERENCES `mydb`.`empresa_sucursal` (`id_empresa_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_trabajador_sexo1`
    FOREIGN KEY (`sexo_id_sexo`)
    REFERENCES `mydb`.`sexo` (`id_sexo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`estado_licencia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estado_licencia` (
  `id_estado_licencia` INT NOT NULL,
  `estado_licencia` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_estado_licencia`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`licencia_medica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`licencia_medica` (
  `id_licencia_medica` INT NOT NULL,
  `tipo_licencia_id_tipo_licencia` INT NOT NULL,
  `forma_licencia_id_forma_licencia` INT NOT NULL,
  `empresa_id_empresa` INT NOT NULL,
  `trabajador_id_trabajador` INT NOT NULL,
  `estado_licencia_id_estado_licencia` INT NOT NULL,
  PRIMARY KEY (`id_licencia_medica`),
  INDEX `fk_licencia_medica_tipo_licencia_idx` (`tipo_licencia_id_tipo_licencia` ASC) VISIBLE,
  INDEX `fk_licencia_medica_forma_licencia1_idx` (`forma_licencia_id_forma_licencia` ASC) VISIBLE,
  INDEX `fk_licencia_medica_empresa1_idx` (`empresa_id_empresa` ASC) VISIBLE,
  INDEX `fk_licencia_medica_trabajador1_idx` (`trabajador_id_trabajador` ASC) VISIBLE,
  INDEX `fk_licencia_medica_estado_licencia1_idx` (`estado_licencia_id_estado_licencia` ASC) VISIBLE,
  CONSTRAINT `fk_licencia_medica_tipo_licencia`
    FOREIGN KEY (`tipo_licencia_id_tipo_licencia`)
    REFERENCES `mydb`.`tipo_licencia` (`id_tipo_licencia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_licencia_medica_forma_licencia1`
    FOREIGN KEY (`forma_licencia_id_forma_licencia`)
    REFERENCES `mydb`.`forma_licencia` (`id_forma_licencia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_licencia_medica_empresa1`
    FOREIGN KEY (`empresa_id_empresa`)
    REFERENCES `mydb`.`empresa` (`id_empresa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_licencia_medica_trabajador1`
    FOREIGN KEY (`trabajador_id_trabajador`)
    REFERENCES `mydb`.`trabajador` (`id_trabajador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_licencia_medica_estado_licencia1`
    FOREIGN KEY (`estado_licencia_id_estado_licencia`)
    REFERENCES `mydb`.`estado_licencia` (`id_estado_licencia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`estado_recepcion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estado_recepcion` (
  `id_estado_recepcion` INT NOT NULL,
  `estado_recepcion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_estado_recepcion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`los_heroes_sucursal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`los_heroes_sucursal` (
  `id_sucursal` INT NOT NULL,
  `sucursal` VARCHAR(45) NULL,
  `calle` VARCHAR(45) NULL,
  `nro` INT NULL,
  `comuna_id_comuna` INT NOT NULL,
  `estado_recepcion_id_estado_recepcion` INT NOT NULL,
  PRIMARY KEY (`id_sucursal`),
  INDEX `fk_sucursal_comuna1_idx` (`comuna_id_comuna` ASC) VISIBLE,
  INDEX `fk_sucursal_estado_recepcion1_idx` (`estado_recepcion_id_estado_recepcion` ASC) VISIBLE,
  CONSTRAINT `fk_sucursal_comuna1`
    FOREIGN KEY (`comuna_id_comuna`)
    REFERENCES `mydb`.`comuna` (`id_comuna`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sucursal_estado_recepcion1`
    FOREIGN KEY (`estado_recepcion_id_estado_recepcion`)
    REFERENCES `mydb`.`estado_recepcion` (`id_estado_recepcion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tipo_documento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tipo_documento` (
  `id_tipo_documento` INT NOT NULL,
  `tipo_documento` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tipo_documento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`estado_documento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estado_documento` (
  `id_estado_documento` INT NOT NULL,
  `estado_documento` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_estado_documento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`documento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`documento` (
  `id_documento` INT NOT NULL,
  `documento` VARCHAR(45) NULL,
  `licencia_medica_id_licencia_medica` INT NOT NULL,
  `sucursal_id_sucursal` INT NOT NULL,
  `tipo_documento_id_tipo_documento` INT NOT NULL,
  `estado_documento_id_estado_documento` INT NOT NULL,
  PRIMARY KEY (`id_documento`),
  INDEX `fk_documento_licencia_medica1_idx` (`licencia_medica_id_licencia_medica` ASC) VISIBLE,
  INDEX `fk_documento_sucursal1_idx` (`sucursal_id_sucursal` ASC) VISIBLE,
  INDEX `fk_documento_tipo_documento1_idx` (`tipo_documento_id_tipo_documento` ASC) VISIBLE,
  INDEX `fk_documento_estado_documento1_idx` (`estado_documento_id_estado_documento` ASC) VISIBLE,
  CONSTRAINT `fk_documento_licencia_medica1`
    FOREIGN KEY (`licencia_medica_id_licencia_medica`)
    REFERENCES `mydb`.`licencia_medica` (`id_licencia_medica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_documento_sucursal1`
    FOREIGN KEY (`sucursal_id_sucursal`)
    REFERENCES `mydb`.`los_heroes_sucursal` (`id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_documento_tipo_documento1`
    FOREIGN KEY (`tipo_documento_id_tipo_documento`)
    REFERENCES `mydb`.`tipo_documento` (`id_tipo_documento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_documento_estado_documento1`
    FOREIGN KEY (`estado_documento_id_estado_documento`)
    REFERENCES `mydb`.`estado_documento` (`id_estado_documento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`etapa_proceso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`etapa_proceso` (
  `id_etapa_proceso` INT NOT NULL,
  `etapa_proceso` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_etapa_proceso`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`estado_etapa_proceso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estado_etapa_proceso` (
  `id_estado_etapa_proceso` INT NOT NULL,
  `estado_etapa_proceso` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_estado_etapa_proceso`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tiempo_proceso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tiempo_proceso` (
  `id_tiempo_proceso` INT NOT NULL,
  `licencia_medica_id_licencia_medica` INT NOT NULL,
  `etapa_proceso_id_etapa_proceso` INT NOT NULL,
  `fecha_etapa` DATETIME NOT NULL,
  `dias_tardados` INT NULL,
  `estado_etapa_proceso_id_estado_etapa_proceso` INT NOT NULL,
  PRIMARY KEY (`id_tiempo_proceso`),
  INDEX `fk_tiempo_proceso_licencia_medica1_idx` (`licencia_medica_id_licencia_medica` ASC) VISIBLE,
  INDEX `fk_tiempo_proceso_etapa_proceso1_idx` (`etapa_proceso_id_etapa_proceso` ASC) VISIBLE,
  INDEX `fk_tiempo_proceso_estado_etapa_proceso1_idx` (`estado_etapa_proceso_id_estado_etapa_proceso` ASC) VISIBLE,
  CONSTRAINT `fk_tiempo_proceso_licencia_medica1`
    FOREIGN KEY (`licencia_medica_id_licencia_medica`)
    REFERENCES `mydb`.`licencia_medica` (`id_licencia_medica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tiempo_proceso_etapa_proceso1`
    FOREIGN KEY (`etapa_proceso_id_etapa_proceso`)
    REFERENCES `mydb`.`etapa_proceso` (`id_etapa_proceso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tiempo_proceso_estado_etapa_proceso1`
    FOREIGN KEY (`estado_etapa_proceso_id_estado_etapa_proceso`)
    REFERENCES `mydb`.`estado_etapa_proceso` (`id_estado_etapa_proceso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`perfil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`perfil` (
  `id_perfil` INT NOT NULL,
  `perfil` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_perfil`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`estado_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estado_usuario` (
  `id_estado_usuario` INT NOT NULL,
  `estado_usuario` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_estado_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`usuario` (
  `id_usuario` INT NOT NULL,
  `usuario` VARCHAR(45) NOT NULL,
  `contrasenna` VARCHAR(45) NOT NULL,
  `perfil_id_perfil` INT NOT NULL,
  `estado_usuario_id_estado_usuario` INT NOT NULL,
  PRIMARY KEY (`id_usuario`),
  INDEX `fk_usuario_perfil1_idx` (`perfil_id_perfil` ASC) VISIBLE,
  INDEX `fk_usuario_estado_usuario1_idx` (`estado_usuario_id_estado_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_usuario_perfil1`
    FOREIGN KEY (`perfil_id_perfil`)
    REFERENCES `mydb`.`perfil` (`id_perfil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_estado_usuario1`
    FOREIGN KEY (`estado_usuario_id_estado_usuario`)
    REFERENCES `mydb`.`estado_usuario` (`id_estado_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`evento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`evento` (
  `id_evento` INT NOT NULL,
  `evento` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_evento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`log_licencia_medica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`log_licencia_medica` (
  `id_log_licencia_medica` INT NOT NULL,
  `fecha` DATETIME NOT NULL,
  `usuario_id_usuario` INT NOT NULL,
  `perfil_id_perfil` INT NOT NULL,
  `evento_id_evento` INT NOT NULL,
  `licencia_medica_id_licencia_medica` INT NOT NULL,
  `observacion` VARCHAR(100) NULL,
  `estado_licencia_id_estado_licencia` INT NOT NULL,
  PRIMARY KEY (`id_log_licencia_medica`),
  INDEX `fk_log_licencia_medica_licencia_medica1_idx` (`licencia_medica_id_licencia_medica` ASC) VISIBLE,
  INDEX `fk_log_licencia_medica_usuario1_idx` (`usuario_id_usuario` ASC) VISIBLE,
  INDEX `fk_log_licencia_medica_perfil1_idx` (`perfil_id_perfil` ASC) VISIBLE,
  INDEX `fk_log_licencia_medica_evento1_idx` (`evento_id_evento` ASC) VISIBLE,
  INDEX `fk_log_licencia_medica_estado_licencia1_idx` (`estado_licencia_id_estado_licencia` ASC) VISIBLE,
  CONSTRAINT `fk_log_licencia_medica_licencia_medica1`
    FOREIGN KEY (`licencia_medica_id_licencia_medica`)
    REFERENCES `mydb`.`licencia_medica` (`id_licencia_medica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_licencia_medica_usuario1`
    FOREIGN KEY (`usuario_id_usuario`)
    REFERENCES `mydb`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_licencia_medica_perfil1`
    FOREIGN KEY (`perfil_id_perfil`)
    REFERENCES `mydb`.`perfil` (`id_perfil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_licencia_medica_evento1`
    FOREIGN KEY (`evento_id_evento`)
    REFERENCES `mydb`.`evento` (`id_evento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_licencia_medica_estado_licencia1`
    FOREIGN KEY (`estado_licencia_id_estado_licencia`)
    REFERENCES `mydb`.`estado_licencia` (`id_estado_licencia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`log_documento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`log_documento` (
  `id_log_documento` INT NOT NULL,
  `fecha` DATETIME NOT NULL,
  `usuario_id_usuario` INT NOT NULL,
  `perfil_id_perfil` INT NOT NULL,
  `evento_id_evento` INT NOT NULL,
  `documento_id_documento` INT NOT NULL,
  `observacion` VARCHAR(100) NULL,
  `estado_documento_id_estado_documento` INT NOT NULL,
  PRIMARY KEY (`id_log_documento`),
  INDEX `fk_log_documento_evento1_idx` (`evento_id_evento` ASC) VISIBLE,
  INDEX `fk_log_documento_perfil1_idx` (`perfil_id_perfil` ASC) VISIBLE,
  INDEX `fk_log_documento_usuario1_idx` (`usuario_id_usuario` ASC) VISIBLE,
  INDEX `fk_log_documento_documento1_idx` (`documento_id_documento` ASC) VISIBLE,
  INDEX `fk_log_documento_estado_documento1_idx` (`estado_documento_id_estado_documento` ASC) VISIBLE,
  CONSTRAINT `fk_log_documento_evento1`
    FOREIGN KEY (`evento_id_evento`)
    REFERENCES `mydb`.`evento` (`id_evento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_documento_perfil1`
    FOREIGN KEY (`perfil_id_perfil`)
    REFERENCES `mydb`.`perfil` (`id_perfil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_documento_usuario1`
    FOREIGN KEY (`usuario_id_usuario`)
    REFERENCES `mydb`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_documento_documento1`
    FOREIGN KEY (`documento_id_documento`)
    REFERENCES `mydb`.`documento` (`id_documento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_documento_estado_documento1`
    FOREIGN KEY (`estado_documento_id_estado_documento`)
    REFERENCES `mydb`.`estado_documento` (`id_estado_documento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`log_etapa_proceso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`log_etapa_proceso` (
  `id_log_etapa_proceso` INT NOT NULL,
  `fecha` DATETIME NOT NULL,
  `usuario_id_usuario` INT NOT NULL,
  `perfil_id_perfil` INT NOT NULL,
  `evento_id_evento` INT NOT NULL,
  `tiempo_proceso_id_tiempo_proceso` INT NOT NULL,
  `observacion` VARCHAR(100) NULL,
  `estado_etapa_proceso_id_estado_etapa_proceso` INT NOT NULL,
  PRIMARY KEY (`id_log_etapa_proceso`),
  INDEX `fk_log_documento_evento1_idx` (`evento_id_evento` ASC) VISIBLE,
  INDEX `fk_log_documento_perfil1_idx` (`perfil_id_perfil` ASC) VISIBLE,
  INDEX `fk_log_documento_usuario1_idx` (`usuario_id_usuario` ASC) VISIBLE,
  INDEX `fk_log_etapa_proceso_tiempo_proceso1_idx` (`tiempo_proceso_id_tiempo_proceso` ASC) VISIBLE,
  INDEX `fk_log_etapa_proceso_estado_etapa_proceso1_idx` (`estado_etapa_proceso_id_estado_etapa_proceso` ASC) VISIBLE,
  CONSTRAINT `fk_log_documento_evento10`
    FOREIGN KEY (`evento_id_evento`)
    REFERENCES `mydb`.`evento` (`id_evento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_documento_perfil10`
    FOREIGN KEY (`perfil_id_perfil`)
    REFERENCES `mydb`.`perfil` (`id_perfil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_documento_usuario10`
    FOREIGN KEY (`usuario_id_usuario`)
    REFERENCES `mydb`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_etapa_proceso_tiempo_proceso1`
    FOREIGN KEY (`tiempo_proceso_id_tiempo_proceso`)
    REFERENCES `mydb`.`tiempo_proceso` (`id_tiempo_proceso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_etapa_proceso_estado_etapa_proceso1`
    FOREIGN KEY (`estado_etapa_proceso_id_estado_etapa_proceso`)
    REFERENCES `mydb`.`estado_etapa_proceso` (`id_estado_etapa_proceso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;




-- REGISTROS:

-- 1. tablas tipo.

-- estado_recepcion
INSERT INTO `mydb`.`estado_recepcion` (`id_estado_recepcion`, `estado_recepcion`) VALUES ('1', 'Apta para recibir documentos');
INSERT INTO `mydb`.`estado_recepcion` (`id_estado_recepcion`, `estado_recepcion`) VALUES ('2', 'No apta para recibir documentos');


-- sexo
INSERT INTO `mydb`.`sexo` (`id_sexo`, `sexo`) VALUES ('1', 'Masculino');
INSERT INTO `mydb`.`sexo` (`id_sexo`, `sexo`) VALUES ('2', 'Femenino');


-- tipo_contrato
INSERT INTO `mydb`.`tipo_contrato` (`id_tipo_contrato`, `tipo_contrato`) VALUES ('1', 'Indefinido');
INSERT INTO `mydb`.`tipo_contrato` (`id_tipo_contrato`, `tipo_contrato`) VALUES ('2', 'A plazo fijo');
INSERT INTO `mydb`.`tipo_contrato` (`id_tipo_contrato`, `tipo_contrato`) VALUES ('3', 'Por obra o faena');
INSERT INTO `mydb`.`tipo_contrato` (`id_tipo_contrato`, `tipo_contrato`) VALUES ('4', 'Part time');
INSERT INTO `mydb`.`tipo_contrato` (`id_tipo_contrato`, `tipo_contrato`) VALUES ('5', 'Según vínculo laboral');


-- estado_afiliacion_salud
INSERT INTO `mydb`.`estado_afiliacion_salud` (`id_estado_afiliacion_salud`, `estado_afiliacion_salud`) VALUES ('1', 'Afiliado');
INSERT INTO `mydb`.`estado_afiliacion_salud` (`id_estado_afiliacion_salud`, `estado_afiliacion_salud`) VALUES ('2', 'Desafiliado');


-- tipo_licencia
INSERT INTO `mydb`.`tipo_licencia` (`id_tipo_licencia`, `tipo_licencia`) VALUES ('1', 'Maternal');
INSERT INTO `mydb`.`tipo_licencia` (`id_tipo_licencia`, `tipo_licencia`) VALUES ('2', 'Curativa');


-- forma_licencia
INSERT INTO `mydb`.`forma_licencia` (`id_forma_licencia`, `forma_licencia`) VALUES ('1', 'Manual');
INSERT INTO `mydb`.`forma_licencia` (`id_forma_licencia`, `forma_licencia`) VALUES ('2', 'Electrónica');
INSERT INTO `mydb`.`forma_licencia` (`id_forma_licencia`, `forma_licencia`) VALUES ('3', 'Mixta');


-- estado_licencia
INSERT INTO `mydb`.`estado_licencia` (`id_estado_licencia`, `estado_licencia`) VALUES ('1', 'En proceso');
INSERT INTO `mydb`.`estado_licencia` (`id_estado_licencia`, `estado_licencia`) VALUES ('2', 'Liquidada');
INSERT INTO `mydb`.`estado_licencia` (`id_estado_licencia`, `estado_licencia`) VALUES ('3', 'Rechazada');


-- tipo_documento
INSERT INTO `mydb`.`tipo_documento` (`id_tipo_documento`, `tipo_documento`) VALUES ('1', 'Liquidación de sueldo');
INSERT INTO `mydb`.`tipo_documento` (`id_tipo_documento`, `tipo_documento`) VALUES ('2', 'Contrato de trabajo');
INSERT INTO `mydb`.`tipo_documento` (`id_tipo_documento`, `tipo_documento`) VALUES ('3', 'Cotización');
INSERT INTO `mydb`.`tipo_documento` (`id_tipo_documento`, `tipo_documento`) VALUES ('4', 'Otro');


-- estado_documento
INSERT INTO `mydb`.`estado_documento` (`id_estado_documento`, `estado_documento`) VALUES ('1', 'Recibido');
INSERT INTO `mydb`.`estado_documento` (`id_estado_documento`, `estado_documento`) VALUES ('2', 'Pendiente');


-- region
INSERT INTO `mydb`.`region` (`id_region`, `region`) VALUES ('1', 'Región Metropolitana de Santiago');
INSERT INTO `mydb`.`region` (`id_region`, `region`) VALUES ('2', 'Región de Valparaíso');


-- etapa_proceso
INSERT INTO `mydb`.`etapa_proceso` (`id_etapa_proceso`, `etapa_proceso`) VALUES ('1', '1. Los Héroes recepción LM');
INSERT INTO `mydb`.`etapa_proceso` (`id_etapa_proceso`, `etapa_proceso`) VALUES ('2', '2. Empleador certificación sección C LM');
INSERT INTO `mydb`.`etapa_proceso` (`id_etapa_proceso`, `etapa_proceso`) VALUES ('3', '3. Empleador envío documentación LM a Los Héroes');
INSERT INTO `mydb`.`etapa_proceso` (`id_etapa_proceso`, `etapa_proceso`) VALUES ('4', '4. Los Héroes envío LM a COMPIN');
INSERT INTO `mydb`.`etapa_proceso` (`id_etapa_proceso`, `etapa_proceso`) VALUES ('5', '5. Servicio Salud Autorización LM');
INSERT INTO `mydb`.`etapa_proceso` (`id_etapa_proceso`, `etapa_proceso`) VALUES ('6', '6. Los Heroes Notificación fecha pago LM');
INSERT INTO `mydb`.`etapa_proceso` (`id_etapa_proceso`, `etapa_proceso`) VALUES ('7', '7. Los Heroes Liquidación LM');


-- estado_etapa_proceso
INSERT INTO `mydb`.`estado_etapa_proceso` (`id_estado_etapa_proceso`, `estado_etapa_proceso`) VALUES ('1', 'En proceso');
INSERT INTO `mydb`.`estado_etapa_proceso` (`id_estado_etapa_proceso`, `estado_etapa_proceso`) VALUES ('2', 'Finalizado');
INSERT INTO `mydb`.`estado_etapa_proceso` (`id_estado_etapa_proceso`, `estado_etapa_proceso`) VALUES ('3', 'Reiniciado');


-- evento
INSERT INTO `mydb`.`evento` (`id_evento`, `evento`) VALUES ('1', 'Ingreso');
INSERT INTO `mydb`.`evento` (`id_evento`, `evento`) VALUES ('2', 'Modificación');
INSERT INTO `mydb`.`evento` (`id_evento`, `evento`) VALUES ('3', 'Eliminación');


-- estado_usuario
INSERT INTO `mydb`.`estado_usuario` (`id_estado_usuario`, `estado_usuario`) VALUES ('1', 'Activado');
INSERT INTO `mydb`.`estado_usuario` (`id_estado_usuario`, `estado_usuario`) VALUES ('2', 'Desactivado');


-- perfil
INSERT INTO `mydb`.`perfil` (`id_perfil`, `perfil`) VALUES ('1', 'Administrador');
INSERT INTO `mydb`.`perfil` (`id_perfil`, `perfil`) VALUES ('2', 'Usuario');


-- usuario
INSERT INTO `mydb`.`usuario` (`id_usuario`, `usuario`, `contrasenna`, `perfil_id_perfil`, `estado_usuario_id_estado_usuario`) VALUES ('1', 'admin', '1234', '1', '1');
INSERT INTO `mydb`.`usuario` (`id_usuario`, `usuario`, `contrasenna`, `perfil_id_perfil`, `estado_usuario_id_estado_usuario`) VALUES ('2', 'usuario_los_heroes', '5678', '2', '1');
INSERT INTO `mydb`.`usuario` (`id_usuario`, `usuario`, `contrasenna`, `perfil_id_perfil`, `estado_usuario_id_estado_usuario`) VALUES ('3', 'usuario2_los_heroes', '2244', '2', '1');


-- 2. tablas tipo dependientes de tipo.

-- comuna
INSERT INTO `mydb`.`comuna` (`id_comuna`, `comuna`, `region_id_region`) VALUES ('1', 'Santiago', '1');
INSERT INTO `mydb`.`comuna` (`id_comuna`, `comuna`, `region_id_region`) VALUES ('2', 'Providencia', '1');
INSERT INTO `mydb`.`comuna` (`id_comuna`, `comuna`, `region_id_region`) VALUES ('3', 'Maipú', '1');
INSERT INTO `mydb`.`comuna` (`id_comuna`, `comuna`, `region_id_region`) VALUES ('4', 'Valparaíso', '2');
INSERT INTO `mydb`.`comuna` (`id_comuna`, `comuna`, `region_id_region`) VALUES ('5', 'Viña del Mar', '2');


-- 3. tablas primarias

-- empresa
INSERT INTO `mydb`.`empresa` (`id_empresa`, `rut`, `dv`, `razon_social`, `giro`) VALUES ('1', '11223344', '1', 'RJC', 'OTRAS ACTIVIDADES DE TECNOLOGÍA DE LA INFORMACIÓN Y DE SERVICIOS INFORMÁTICOS');
INSERT INTO `mydb`.`empresa` (`id_empresa`, `rut`, `dv`, `razon_social`, `giro`) VALUES ('2', '55667788', '2', 'Metro SA', 'TRANSPORTE URBANO Y SUBURBANO DE PASAJEROS VÍA METRO Y METROTREN');
INSERT INTO `mydb`.`empresa` (`id_empresa`, `rut`, `dv`, `razon_social`, `giro`) VALUES ('3', '22446688', '3', 'Stelphone', 'VENTA AL POR MAYOR DE EQUIPO, PARTES Y PIEZAS ELECTRÓNICOS Y TELECOMUNICACIONES');


-- 4. tablas primarias dependientes de tipo

-- los_heroes_sucursal
INSERT INTO `mydb`.`los_heroes_sucursal` (`id_sucursal`, `sucursal`, `comuna_id_comuna`, `calle`, `nro`, `estado_recepcion_id_estado_recepcion`) VALUES ('1', '1 - Bandera', '1', 'Bandera', '125', '2');
INSERT INTO `mydb`.`los_heroes_sucursal` (`id_sucursal`, `sucursal`, `comuna_id_comuna`, `calle`, `nro`, `estado_recepcion_id_estado_recepcion`) VALUES ('2', '2 - Merced', '1', 'Merced', '570', '1');
INSERT INTO `mydb`.`los_heroes_sucursal` (`id_sucursal`, `sucursal`, `comuna_id_comuna`, `calle`, `nro`, `estado_recepcion_id_estado_recepcion`) VALUES ('3', 'Valparaíso LH', '4', 'Pedro Montt', '1739', '1');
INSERT INTO `mydb`.`los_heroes_sucursal` (`id_sucursal`, `sucursal`, `comuna_id_comuna`, `estado_recepcion_id_estado_recepcion`) VALUES ('4', 'Virtual', '1', '1');


-- 5. tablas secundarias

-- empresa_sucursal
INSERT INTO `mydb`.`empresa_sucursal` (`id_empresa_sucursal`, `empresa_sucursal`, `empresa_id_empresa`, `comuna_id_comuna`) VALUES ('1', '1 - Providencia', '1', '2');
INSERT INTO `mydb`.`empresa_sucursal` (`id_empresa_sucursal`, `empresa_sucursal`, `empresa_id_empresa`, `comuna_id_comuna`) VALUES ('2', '2 - Maipú', '1', '3');
INSERT INTO `mydb`.`empresa_sucursal` (`id_empresa_sucursal`, `empresa_sucursal`, `empresa_id_empresa`, `comuna_id_comuna`) VALUES ('3', 'Santiago Centro', '2', '1');
INSERT INTO `mydb`.`empresa_sucursal` (`id_empresa_sucursal`, `empresa_sucursal`, `empresa_id_empresa`, `comuna_id_comuna`) VALUES ('4', 'Chorrillos', '3', '5');


-- 6. tablas secundarias dependientes de secundarias

-- trabajador
INSERT INTO `mydb`.`trabajador` (`id_trabajador`, `rut`, `dv`, `nombres`, `apellido_paterno`, `apellido_materno`, `sexo_id_sexo`, `fecha_nacimiento`, `tipo_contrato_id_tipo_contrato`, `estado_afiliacion_salud_id_estado_afiliacion_salud`, `empresa_sucursal_id_empresa_sucursal`) VALUES ('1', '11111111', '1', 'Agustín', 'Silva', 'Mardonez', '1', '1980-01-13', '5', '1', '1');
INSERT INTO `mydb`.`trabajador` (`id_trabajador`, `rut`, `dv`, `nombres`, `apellido_paterno`, `apellido_materno`, `sexo_id_sexo`, `fecha_nacimiento`, `tipo_contrato_id_tipo_contrato`, `estado_afiliacion_salud_id_estado_afiliacion_salud`, `empresa_sucursal_id_empresa_sucursal`) VALUES ('2', '22222222', '2', 'Romualdo Evaristo', 'Mesa', 'Moreno', '1', '2000-04-17', '3', '1', '1');
INSERT INTO `mydb`.`trabajador` (`id_trabajador`, `rut`, `dv`, `nombres`, `apellido_paterno`, `apellido_materno`, `sexo_id_sexo`, `fecha_nacimiento`, `tipo_contrato_id_tipo_contrato`, `estado_afiliacion_salud_id_estado_afiliacion_salud`, `empresa_sucursal_id_empresa_sucursal`) VALUES ('3', '33333333', '3', 'Vania Loreto', 'Zuñiga', 'Jerez', '2', '1977-11-21', '2', '2', '2');
INSERT INTO `mydb`.`trabajador` (`id_trabajador`, `rut`, `dv`, `nombres`, `apellido_paterno`, `apellido_materno`, `sexo_id_sexo`, `fecha_nacimiento`, `tipo_contrato_id_tipo_contrato`, `estado_afiliacion_salud_id_estado_afiliacion_salud`, `empresa_sucursal_id_empresa_sucursal`) VALUES ('4', '44444444', '4', 'Elba Zulema', 'Fica', 'Soto', '2', '1996-07-16', '4', '1', '2');
INSERT INTO `mydb`.`trabajador` (`id_trabajador`, `rut`, `dv`, `nombres`, `apellido_paterno`, `apellido_materno`, `sexo_id_sexo`, `fecha_nacimiento`, `tipo_contrato_id_tipo_contrato`, `estado_afiliacion_salud_id_estado_afiliacion_salud`, `empresa_sucursal_id_empresa_sucursal`) VALUES ('5', '55555555', '5', 'Manuel', 'Matta', 'Lepe', '1', '1985-05-09', '1', '2', '3');
INSERT INTO `mydb`.`trabajador` (`id_trabajador`, `rut`, `dv`, `nombres`, `apellido_paterno`, `apellido_materno`, `sexo_id_sexo`, `fecha_nacimiento`, `tipo_contrato_id_tipo_contrato`, `estado_afiliacion_salud_id_estado_afiliacion_salud`, `empresa_sucursal_id_empresa_sucursal`) VALUES ('6', '66666666', '6', 'Maria José', 'Perez', 'Soza', '2', '2003-02-01', '4', '1', '3');
INSERT INTO `mydb`.`trabajador` (`id_trabajador`, `rut`, `dv`, `nombres`, `apellido_paterno`, `apellido_materno`, `sexo_id_sexo`, `fecha_nacimiento`, `tipo_contrato_id_tipo_contrato`, `estado_afiliacion_salud_id_estado_afiliacion_salud`, `empresa_sucursal_id_empresa_sucursal`) VALUES ('7', '77777777', '7', 'Pedro Samuel', 'García', 'Amigo', '1', '1999-12-30', '1', '2', '4');


-- licencia_medica
INSERT INTO `mydb`.`licencia_medica` (`id_licencia_medica`, `tipo_licencia_id_tipo_licencia`, `forma_licencia_id_forma_licencia`, `empresa_id_empresa`, `trabajador_id_trabajador`, `estado_licencia_id_estado_licencia`) VALUES ('1', '2', '2', '1', '1', '2');
INSERT INTO `mydb`.`licencia_medica` (`id_licencia_medica`, `tipo_licencia_id_tipo_licencia`, `forma_licencia_id_forma_licencia`, `empresa_id_empresa`, `trabajador_id_trabajador`, `estado_licencia_id_estado_licencia`) VALUES ('2', '1', '1', '2', '6', '3');
INSERT INTO `mydb`.`licencia_medica` (`id_licencia_medica`, `tipo_licencia_id_tipo_licencia`, `forma_licencia_id_forma_licencia`, `empresa_id_empresa`, `trabajador_id_trabajador`, `estado_licencia_id_estado_licencia`) VALUES ('3', '1', '2', '1', '4', '3');
INSERT INTO `mydb`.`licencia_medica` (`id_licencia_medica`, `tipo_licencia_id_tipo_licencia`, `forma_licencia_id_forma_licencia`, `empresa_id_empresa`, `trabajador_id_trabajador`, `estado_licencia_id_estado_licencia`) VALUES ('4', '2', '3', '3', '7', '2');
INSERT INTO `mydb`.`licencia_medica` (`id_licencia_medica`, `tipo_licencia_id_tipo_licencia`, `forma_licencia_id_forma_licencia`, `empresa_id_empresa`, `trabajador_id_trabajador`, `estado_licencia_id_estado_licencia`) VALUES ('5', '2', '1', '1', '1', '1');
INSERT INTO `mydb`.`licencia_medica` (`id_licencia_medica`, `tipo_licencia_id_tipo_licencia`, `forma_licencia_id_forma_licencia`, `empresa_id_empresa`, `trabajador_id_trabajador`, `estado_licencia_id_estado_licencia`) VALUES ('6', '2', '2', '3', '7', '1');


-- tiempo_proceso
INSERT INTO `mydb`.`tiempo_proceso` (`id_tiempo_proceso`, `licencia_medica_id_licencia_medica`, `etapa_proceso_id_etapa_proceso`, `fecha_etapa`, `dias_tardados`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('1', '1', '1', '2021-08-22', '0', '2');
INSERT INTO `mydb`.`tiempo_proceso` (`id_tiempo_proceso`, `licencia_medica_id_licencia_medica`, `etapa_proceso_id_etapa_proceso`, `fecha_etapa`, `dias_tardados`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('2', '1', '2', '2021-08-24', '2', '2');
INSERT INTO `mydb`.`tiempo_proceso` (`id_tiempo_proceso`, `licencia_medica_id_licencia_medica`, `etapa_proceso_id_etapa_proceso`, `fecha_etapa`, `dias_tardados`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('3', '1', '3', '2021-08-28', '4', '2');
INSERT INTO `mydb`.`tiempo_proceso` (`id_tiempo_proceso`, `licencia_medica_id_licencia_medica`, `etapa_proceso_id_etapa_proceso`, `fecha_etapa`, `dias_tardados`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('4', '1', '4', '2021-08-28', '0', '2');
INSERT INTO `mydb`.`tiempo_proceso` (`id_tiempo_proceso`, `licencia_medica_id_licencia_medica`, `etapa_proceso_id_etapa_proceso`, `fecha_etapa`, `dias_tardados`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('5', '1', '5', '2021-09-05', '8', '2');
INSERT INTO `mydb`.`tiempo_proceso` (`id_tiempo_proceso`, `licencia_medica_id_licencia_medica`, `etapa_proceso_id_etapa_proceso`, `fecha_etapa`, `dias_tardados`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('6', '1', '6', '2021-09-05', '0', '2');
INSERT INTO `mydb`.`tiempo_proceso` (`id_tiempo_proceso`, `licencia_medica_id_licencia_medica`, `etapa_proceso_id_etapa_proceso`, `fecha_etapa`, `dias_tardados`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('7', '1', '7', '2021-09-08', '3', '2');

INSERT INTO `mydb`.`tiempo_proceso` (`id_tiempo_proceso`, `licencia_medica_id_licencia_medica`, `etapa_proceso_id_etapa_proceso`, `fecha_etapa`, `dias_tardados`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('8', '2', '1', '2021-10-18', '0', '2');
INSERT INTO `mydb`.`tiempo_proceso` (`id_tiempo_proceso`, `licencia_medica_id_licencia_medica`, `etapa_proceso_id_etapa_proceso`, `fecha_etapa`, `dias_tardados`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('9', '2', '2', '2021-10-27', '7', '1');
INSERT INTO `mydb`.`tiempo_proceso` (`id_tiempo_proceso`, `licencia_medica_id_licencia_medica`, `etapa_proceso_id_etapa_proceso`, `fecha_etapa`, `dias_tardados`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('10', '2', '3', '2021-10-25', '0', '3');


-- documento
INSERT INTO `mydb`.`documento` (`id_documento`, `documento`, `licencia_medica_id_licencia_medica`, `sucursal_id_sucursal`, `tipo_documento_id_tipo_documento`, `estado_documento_id_estado_documento`) VALUES ('1', 'Liquidación 1', '1', '4', 1, 2);
INSERT INTO `mydb`.`documento` (`id_documento`, `documento`, `licencia_medica_id_licencia_medica`, `sucursal_id_sucursal`, `tipo_documento_id_tipo_documento`, `estado_documento_id_estado_documento`) VALUES ('2', 'Liquidación 2', '1', '4', 1, 2);
INSERT INTO `mydb`.`documento` (`id_documento`, `documento`, `licencia_medica_id_licencia_medica`, `sucursal_id_sucursal`, `tipo_documento_id_tipo_documento`, `estado_documento_id_estado_documento`) VALUES ('3', 'Liquidación 3', '1', '4', 1, 2);
INSERT INTO `mydb`.`documento` (`id_documento`, `documento`, `licencia_medica_id_licencia_medica`, `sucursal_id_sucursal`, `tipo_documento_id_tipo_documento`, `estado_documento_id_estado_documento`) VALUES ('4', 'Contrato laboral', '1', '4', 2, 1);
INSERT INTO `mydb`.`documento` (`id_documento`, `documento`, `licencia_medica_id_licencia_medica`, `sucursal_id_sucursal`, `tipo_documento_id_tipo_documento`, `estado_documento_id_estado_documento`) VALUES ('5', 'Liquidación 1', '2', '2', 1, 1);
INSERT INTO `mydb`.`documento` (`id_documento`, `documento`, `licencia_medica_id_licencia_medica`, `sucursal_id_sucursal`, `tipo_documento_id_tipo_documento`, `estado_documento_id_estado_documento`) VALUES ('6', 'Liquidación 2', '2', '2', 1, 1);
INSERT INTO `mydb`.`documento` (`id_documento`, `documento`, `licencia_medica_id_licencia_medica`, `sucursal_id_sucursal`, `tipo_documento_id_tipo_documento`, `estado_documento_id_estado_documento`) VALUES ('7', 'Liquidación 3', '2', '2', 1, 2);
INSERT INTO `mydb`.`documento` (`id_documento`, `documento`, `licencia_medica_id_licencia_medica`, `sucursal_id_sucursal`, `tipo_documento_id_tipo_documento`, `estado_documento_id_estado_documento`) VALUES ('8', 'Contrato laboral', '2', '2', 2, 1);
INSERT INTO `mydb`.`documento` (`id_documento`, `documento`, `licencia_medica_id_licencia_medica`, `sucursal_id_sucursal`, `tipo_documento_id_tipo_documento`, `estado_documento_id_estado_documento`) VALUES ('9', 'Liquidación 1', '5', '2', 1, 1);
INSERT INTO `mydb`.`documento` (`id_documento`, `documento`, `licencia_medica_id_licencia_medica`, `sucursal_id_sucursal`, `tipo_documento_id_tipo_documento`, `estado_documento_id_estado_documento`) VALUES ('10', 'Liquidación 2', '5', '2', 1, 1);
INSERT INTO `mydb`.`documento` (`id_documento`, `documento`, `licencia_medica_id_licencia_medica`, `sucursal_id_sucursal`, `tipo_documento_id_tipo_documento`, `estado_documento_id_estado_documento`) VALUES ('11', 'Liquidación 3', '5', '2', 1, 1);
INSERT INTO `mydb`.`documento` (`id_documento`, `documento`, `licencia_medica_id_licencia_medica`, `sucursal_id_sucursal`, `tipo_documento_id_tipo_documento`, `estado_documento_id_estado_documento`) VALUES ('12', 'Contrato laboral', '5', '2', 2, 2);



-- log_licencia_medica
INSERT INTO `mydb`.`log_licencia_medica` (`id_log_licencia_medica`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `licencia_medica_id_licencia_medica`, `observacion`, `estado_licencia_id_estado_licencia`) VALUES ('1', '2021-08-22', '2', '2', '1', '1', 'Recepcionada lm 1', '1');
INSERT INTO `mydb`.`log_licencia_medica` (`id_log_licencia_medica`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `licencia_medica_id_licencia_medica`, `observacion`, `estado_licencia_id_estado_licencia`) VALUES ('2', '2021-10-18', '2', '2', '1', '2', 'Recepcionada lm 2', '1');
INSERT INTO `mydb`.`log_licencia_medica` (`id_log_licencia_medica`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `licencia_medica_id_licencia_medica`, `observacion`, `estado_licencia_id_estado_licencia`) VALUES ('3', '2020-12-30', '2', '2', '1', '3', 'Recepcionada lm 3', '1');
INSERT INTO `mydb`.`log_licencia_medica` (`id_log_licencia_medica`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `licencia_medica_id_licencia_medica`, `observacion`, `estado_licencia_id_estado_licencia`) VALUES ('4', '2021-09-25', '3', '2', '1', '4', '', '1');
INSERT INTO `mydb`.`log_licencia_medica` (`id_log_licencia_medica`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `licencia_medica_id_licencia_medica`, `observacion`, `estado_licencia_id_estado_licencia`) VALUES ('5', '2021-11-13', '3', '2', '1', '5', '', '1');
INSERT INTO `mydb`.`log_licencia_medica` (`id_log_licencia_medica`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `licencia_medica_id_licencia_medica`, `observacion`, `estado_licencia_id_estado_licencia`) VALUES ('6', '2021-10-30', '2', '2', '1', '6', 'Recepcionada lm 6', '1');
INSERT INTO `mydb`.`log_licencia_medica` (`id_log_licencia_medica`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `licencia_medica_id_licencia_medica`, `observacion`, `estado_licencia_id_estado_licencia`) VALUES ('7', '2021-09-08', '2', '2', '2', '1', 'Se ha pagado a cliente', '2');
INSERT INTO `mydb`.`log_licencia_medica` (`id_log_licencia_medica`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `licencia_medica_id_licencia_medica`, `observacion`, `estado_licencia_id_estado_licencia`) VALUES ('8', '2021-10-25', '2', '2', '2', '2', 'Rechazado falta documentación', '3');


-- log_etapa_proceso
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('1', '2021-08-22', '3', '2', '1', '1', '2');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('2', '2021-08-22', '3', '2', '1', '2', '1');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('3', '2021-08-24', '3', '2', '2', '2', '2');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('4', '2021-08-24', '3', '2', '1', '3', '1');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('5', '2021-08-28', '3', '2', '2', '3', '2');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('6', '2021-08-28', '3', '2', '1', '4', '1');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('7', '2021-08-28', '3', '2', '2', '4', '2');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('8', '2021-08-28', '3', '2', '1', '5', '1');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('9', '2021-09-05', '3', '2', '2', '5', '2');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('10', '2021-09-05', '3', '2', '1', '6', '1');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('11', '2021-09-05', '3', '2', '2', '6', '2');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('12', '2021-09-05', '3', '2', '1', '7', '1');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('13', '2021-09-08', '3', '2', '2', '7', '2');

INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `observacion`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('14', '2021-10-18', '2', '2', '1', '8', 'Recepcionada lm 2', '2');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `observacion`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('15', '2021-10-18', '2', '2', '1', '9', 'Envío formulario a empleador.', '1');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `observacion`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('16', '2021-10-23', '2', '2', '2', '9', 'Empleador envía documentos.', '2');
INSERT INTO `mydb`.`log_etapa_proceso` (`id_log_etapa_proceso`, `fecha`, `usuario_id_usuario`, `perfil_id_perfil`, `evento_id_evento`, `tiempo_proceso_id_tiempo_proceso`, `observacion`, `estado_etapa_proceso_id_estado_etapa_proceso`) VALUES ('17', '2021-10-23', '2', '2', '1', '10', 'Documentos inválidos', '3');




-- a. Top de empresas que sus trabajadores presenten más licencias.

SELECT
	e.id_empresa
    , e.rut AS rut_empresa
    , e.razon_social
	, COUNT(lm.id_licencia_medica) AS licencias
FROM empresa e
INNER JOIN licencia_medica lm
ON e.id_empresa = lm.empresa_id_empresa
GROUP BY e.id_empresa
ORDER BY licencias DESC ;


-- b. Las sucursales que reciben más documentación, segmentados por región o comuna, así como sucursales que no están aptas para recibir documentación.

SELECT
	lhs.id_sucursal
    , lhs.sucursal
	, COUNT((SELECT d2.id_documento
				FROM documento d2
                INNER JOIN estado_documento ed
                ON d2.estado_documento_id_estado_documento = ed.id_estado_documento
                WHERE d2.estado_documento_id_estado_documento = 1
                AND d.id_documento = d2.id_documento
			)) AS recibidos
    , r.region
    , c.comuna
    , er.estado_recepcion
FROM los_heroes_sucursal lhs
LEFT JOIN documento d
ON lhs.id_sucursal = d.sucursal_id_sucursal
INNER JOIN comuna c
ON lhs.comuna_id_comuna = c.id_comuna
INNER JOIN region r
ON c.region_id_region = r.id_region
INNER JOIN estado_recepcion er
ON lhs.estado_recepcion_id_estado_recepcion = er.id_estado_recepcion
GROUP BY lhs.id_sucursal
	, c.id_comuna
ORDER BY recibidos DESC ;


-- c. Top de documentos que hacen que la licencia reinicie su flujo.

SELECT
	d.id_documento
    , d.documento
    , d.licencia_medica_id_licencia_medica AS id_licencia_medica
    , ed.estado_documento
FROM documento d
INNER JOIN estado_documento ed
ON d.estado_documento_id_estado_documento = ed.id_estado_documento
WHERE ed.estado_documento = 'Pendiente' ;


-- d. Tiempos promedios, mínimos y máximos, desde el inicio del proceso hasta el cálculo del monto a pagar por cada licencia
SELECT
	licencia_medica_id_licencia_medica AS id_licencia_medica
	, CONCAT(TRUNCATE(AVG(dias_tardados), 2), ' días') AS tiempo_promedio
    , CONCAT(MIN(dias_tardados), ' días') AS tiempo_min
    , CONCAT(MAX(dias_tardados), ' días') AS tiempo_max
FROM tiempo_proceso
WHERE dias_tardados IS NOT NULL AND dias_tardados <> 0 ;


-- e. Estadísticas de licencias manuales o electrónicas vs mixtas

SELECT
    COUNT((SELECT lm2.id_licencia_medica
			FROM licencia_medica lm2
            WHERE forma_licencia_id_forma_licencia = 1
            AND lm.id_licencia_medica = lm2.id_licencia_medica
		)) AS total_licencias_manuales
    , COUNT((SELECT lm2.id_licencia_medica
				FROM licencia_medica lm2
				WHERE forma_licencia_id_forma_licencia = 2
				AND lm.id_licencia_medica = lm2.id_licencia_medica
			)) AS total_licencias_electronicas
    , COUNT((SELECT lm2.id_licencia_medica
				FROM licencia_medica lm2
				WHERE forma_licencia_id_forma_licencia = 3
				AND lm.id_licencia_medica = lm2.id_licencia_medica
			)) AS total_licencias_mixtas
FROM licencia_medica lm ;


-- f. Los estados del proceso que almacenan la mayor cantidad de licencias asi como los cambios de estado que tardan más tiempo en ser modificados

SELECT
	ep.id_etapa_proceso
    , ep.etapa_proceso
	, COUNT(lm.id_licencia_medica) AS licencias
    , tp.dias_tardados
    , eep.estado_etapa_proceso
FROM etapa_proceso ep
INNER JOIN tiempo_proceso tp
ON ep.id_etapa_proceso = tp.etapa_proceso_id_etapa_proceso
INNER JOIN licencia_medica lm
ON tp.licencia_medica_id_licencia_medica = lm.id_licencia_medica
INNER JOIN estado_etapa_proceso eep
ON tp.estado_etapa_proceso_id_estado_etapa_proceso = eep.id_estado_etapa_proceso
GROUP BY tp.etapa_proceso_id_etapa_proceso
	, tp.estado_etapa_proceso_id_estado_etapa_proceso
ORDER BY licencias DESC ;


-- g. Trabajadores que tienen licencia y son desafiliados

SELECT
	t.id_trabajador
    , t.rut
    , t.nombres
    , t.apellido_paterno
    , t.apellido_materno
    , e.razon_social AS empresa
    , COUNT(lm.id_licencia_medica) AS licencias
    , eas.estado_afiliacion_salud
FROM trabajador t
INNER JOIN licencia_medica lm
ON t.id_trabajador = lm.trabajador_id_trabajador
INNER JOIN estado_afiliacion_salud eas
ON t.estado_afiliacion_salud_id_estado_afiliacion_salud = eas.id_estado_afiliacion_salud
INNER JOIN empresa e
ON lm.empresa_id_empresa = e.id_empresa
WHERE eas.estado_afiliacion_salud = 'Desafiliado' ;


-- h. Manejo de data histórica, de validación de procesos y log’s de cambios de estado o actualización de data relevante.

SELECT
	llm.id_log_licencia_medica
    , llm.fecha
    , llm.usuario_id_usuario
    , u.usuario
    , p.perfil
    , e.evento
	, llm.licencia_medica_id_licencia_medica
    , llm.observacion
    , el.estado_licencia
FROM log_licencia_medica llm
INNER JOIN usuario u
ON llm.usuario_id_usuario = u.id_usuario
INNER JOIN perfil p
ON llm.perfil_id_perfil = p.id_perfil
INNER JOIN evento e
ON llm.evento_id_evento = e.id_evento
INNER JOIN estado_licencia el
ON llm.estado_licencia_id_estado_licencia = el.id_estado_licencia ;


-- borrar esquema
DROP SCHEMA IF EXISTS `mydb` ;
